# A modified version of this file: https://github.com/tsuyoshicho/action-mypy/blob/master/action.yml

name: "Run mypy with reviewdog"
description: "üê∂ Run mypy with reviewdog on pull requests to improve code review experience."
inputs:
  github_token:
    description: "GITHUB_TOKEN"
    required: false
    default: "${{ github.token }}"
  workdir:
    description: |
      Working directory of where to run mypy command.
      Relative to the root directory.
    required: false
    default: "."
  target:
    description: |
      Target file or directory of mypy command.
      Relative to the working directory.
    required: false
    default: "."
  ### Flags for setup/execute ###
  execute_command:
    description: |
      mypy execute command.
      Normally it is "mypy", but for example "poetry run mypy"
      if you want to run at Poetry without activating the virtual environment.
    required: false
    default: "mypy"
  setup_command:
    description: |
      mypy setup command.
      Runs when "setup_method" is "install" or required by "adaptive".
    required: false
    default: "pip install mypy"
  setup_method:
    description: |
      mypy setup method. Select from below.
      "adaptive" - Check "execute_command" with "--version" is executable.
      If it can be executed, do the same as "nothing", otherwise do the same as "install".
      "nothing" - no setup process.
      This option expects the user to prepare the environment
      (ex. previous workflow step executed "pip install -r requirements.txt").
      "install" - execute "setup_command".
      Incorrect values behave as "adaptive".
    required: false
    default: "adaptive"
  ### Flags for reviewdog ###
  level:
    description: "Report level for reviewdog [info,warning,error]"
    required: false
    default: "error"
  reporter:
    description: "Reporter of reviewdog command [github-pr-check,github-pr-review]."
    required: false
    default: "github-pr-check"
  filter_mode:
    description: |
      Filtering mode for the reviewdog command [added,diff_context,file,nofilter].
      Default is added.
    required: false
    default: "added"
  fail_on_error:
    description: |
      Exit code for reviewdog when errors are found [true,false]
      Default is `false`.
    required: false
    default: false
  reviewdog_flags:
    description: "Additional reviewdog flags"
    required: false
    default: ""
  ### Flags for mypy ###
  mypy_flags:
    description: "mypy options (default: <none>)"
    required: false
    default: ""
  tool_name:
    description: "Tool name to use for reviewdog reporter"
    default: "mypy"
  ignore_note:
    description: |
      Ignore note entry.
      mypy report some error with optional note entry.
      This option is workaround.
    default: "false"
  changed_files:
    description: "A list of files that have been changed"
    required: true
    default: ""

runs:
  using: "composite"
  steps:
    - name: Setup Python and Poetry
      id: setup_python
      uses: ./.github/actions/setup-python-poetry
      with:
        install-deps: false
        cache-deps: false
        workdir: ${{ inputs.workdir }}

    - run: $GITHUB_ACTION_PATH/entrypoint.sh
      shell: bash
      env:
        REVIEWDOG_VERSION: v0.14.1
        # INPUT_<VARIABLE_NAME> is not available in Composite run steps
        # https://github.community/t/input-variable-name-is-not-available-in-composite-run-steps/127611
        INPUT_GITHUB_TOKEN: ${{ inputs.github_token }}
        INPUT_WORKDIR: ${{ inputs.workdir }}
        INPUT_TARGET: ${{ inputs.target }}
        INPUT_EXECUTE_COMMAND: ${{ inputs.execute_command }}
        INPUT_SETUP_COMMAND: ${{ inputs.setup_command }}
        INPUT_SETUP_METHOD: ${{ inputs.setup_method }}
        INPUT_LEVEL: ${{ inputs.level }}
        INPUT_REPORTER: ${{ inputs.reporter }}
        INPUT_FILTER_MODE: ${{ inputs.filter_mode }}
        INPUT_FAIL_ON_ERROR: ${{ inputs.fail_on_error }}
        INPUT_REVIEWDOG_FLAGS: ${{ inputs.reviewdog_flags }}
        INPUT_MYPY_FLAGS: ${{ inputs.mypy_flags }}
        INPUT_TOOL_NAME: ${{ inputs.tool_name }}
        INPUT_IGNORE_NOTE: ${{ inputs.ignore_note }}
        INPUT_CHANGED_FILES: ${{ inputs.changed_files }}
        INPUT_PYTHON_VERSION: ${{ steps.setup_python.outputs.python-version }}
